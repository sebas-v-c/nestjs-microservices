// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.7.5
//   protoc               v6.32.0
// source: financiero.proto

/* eslint-disable */
import { GrpcMethod, GrpcStreamMethod } from '@nestjs/microservices';
import { Observable } from 'rxjs';

export const protobufPackage = 'financiero';

export interface Fuente {
  fntId: number;
  fntNombre: string;
  fntDescripcion: string;
}

export interface ListFuentesRequest {}

export interface ListFuentesResponse {
  fuentes: Fuente[];
}

export const FINANCIERO_PACKAGE_NAME = 'financiero';

export interface FuenteServiceClient {
  getFuentes(request: ListFuentesRequest): Observable<ListFuentesResponse>;
}

export interface FuenteServiceController {
  getFuentes(
    request: ListFuentesRequest,
  ):
    | Promise<ListFuentesResponse>
    | Observable<ListFuentesResponse>
    | ListFuentesResponse;
}

export function FuenteServiceControllerMethods() {
  return function (constructor: Function) {
    const grpcMethods: string[] = ['getFuentes'];
    for (const method of grpcMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(
        constructor.prototype,
        method,
      );
      GrpcMethod('FuenteService', method)(
        constructor.prototype[method],
        method,
        descriptor,
      );
    }
    const grpcStreamMethods: string[] = [];
    for (const method of grpcStreamMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(
        constructor.prototype,
        method,
      );
      GrpcStreamMethod('FuenteService', method)(
        constructor.prototype[method],
        method,
        descriptor,
      );
    }
  };
}

export const FUENTE_SERVICE_NAME = 'FuenteService';
